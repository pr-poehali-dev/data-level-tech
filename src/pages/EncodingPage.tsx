import { GitCompare } from 'lucide-react';
import PageHeader from '@/components/ui/PageHeader';
import ImageCard from '@/components/ui/ImageCard';
import InfoCard from '@/components/ui/InfoCard';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Binary, Code, ShieldAlert } from 'lucide-react';

const EncodingPage = () => {
  return (
    <div>
      <PageHeader 
        title="Кодирование данных" 
        description="Методы представления двоичной информации на физическом уровне"
        icon={<GitCompare className="h-6 w-6" />}
      />

      <div className="grid gap-6 md:grid-cols-2">
        <ImageCard 
          imageSrc="/placeholder.svg" 
          alt="Кодирование данных"
          caption="Различные схемы линейного кодирования для передачи цифровых данных"
        />

        <div className="prose max-w-none">
          <p>
            Кодирование данных на физическом уровне — это метод представления двоичной информации (0 и 1)
            в виде физических сигналов, которые могут быть переданы по каналу связи. Это важная часть
            физического уровня, поскольку правильно выбранная схема кодирования может улучшить
            помехоустойчивость, синхронизацию, эффективность использования полосы пропускания и
            другие характеристики канала передачи данных.
          </p>
          <p>
            Схемы кодирования данных различаются по способу представления логических уровней,
            эффективности использования полосы пропускания, способности к самосинхронизации,
            устойчивости к шумам и помехам, а также по сложности реализации.
          </p>
        </div>
      </div>

      <Tabs defaultValue="line" className="mt-8">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="line">Линейное кодирование</TabsTrigger>
          <TabsTrigger value="block">Блочное кодирование</TabsTrigger>
          <TabsTrigger value="error">Обнаружение и исправление ошибок</TabsTrigger>
        </TabsList>
        
        <TabsContent value="line" className="mt-6">
          <div className="grid gap-6 md:grid-cols-2">
            <div>
              <h2>Линейное кодирование</h2>
              <p>
                Линейное кодирование определяет, каким образом биты данных представляются
                в виде электрических или оптических сигналов. Существует множество схем линейного
                кодирования, каждая со своими преимуществами и недостатками.
              </p>
              
              <h3>Двухуровневые коды:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li><strong>NRZ (Non-Return to Zero)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>NRZ-L (Level): 1 = высокий уровень, 0 = низкий уровень</li>
                    <li>NRZ-I (Invert): 1 = изменение уровня, 0 = без изменений</li>
                    <li>Простая реализация, но проблемы с DC-компонентой и синхронизацией</li>
                  </ul>
                </li>
                <li><strong>RZ (Return to Zero)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Сигнал возвращается к нулю в середине битового интервала</li>
                    <li>Лучшая синхронизация, но требует большей полосы пропускания</li>
                  </ul>
                </li>
                <li><strong>Manchester</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>1 = переход от высокого к низкому, 0 = переход от низкого к высокому</li>
                    <li>Хорошая синхронизация, нет DC-компоненты</li>
                    <li>Используется в стандарте 10BASE-T Ethernet</li>
                    <li>Требует вдвое большую полосу пропускания</li>
                  </ul>
                </li>
                <li><strong>Дифференциальный Manchester</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Всегда есть переход в середине бита</li>
                    <li>1 = нет перехода в начале бита, 0 = есть переход в начале бита</li>
                    <li>Используется в стандарте Token Ring</li>
                  </ul>
                </li>
              </ul>
              
              <h3>Многоуровневые коды:</h3>
              <ul className="list-disc pl-6">
                <li><strong>MLT-3 (Multi-Level Transmit)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Три уровня сигнала: +V, 0, -V</li>
                    <li>1 = переход на следующий уровень, 0 = без изменений</li>
                    <li>Используется в 100BASE-TX Ethernet</li>
                    <li>Меньшая требуемая полоса пропускания</li>
                  </ul>
                </li>
                <li><strong>2B1Q (2 Binary 1 Quaternary)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Два бита кодируются одним из четырех уровней сигнала</li>
                    <li>Используется в ISDN и HDSL</li>
                  </ul>
                </li>
                <li><strong>PAM-5 (5-level Pulse Amplitude Modulation)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Пять уровней сигнала для кодирования данных</li>
                    <li>Используется в 1000BASE-T Ethernet (Gigabit Ethernet)</li>
                    <li>Четыре пары проводов, каждая с PAM-5</li>
                  </ul>
                </li>
              </ul>
            </div>
            
            <div>
              <h3>Биполярные коды:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li><strong>AMI (Alternate Mark Inversion)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>0 = нулевой уровень, 1 = поочередно +V и -V</li>
                    <li>Хорошая защита от ошибок, нет DC-компоненты</li>
                    <li>Используется в T1/E1 линиях</li>
                  </ul>
                </li>
                <li><strong>B8ZS (Bipolar with 8 Zeros Substitution)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Модификация AMI для обработки длинных последовательностей нулей</li>
                    <li>8 нулей заменяются специальной последовательностью</li>
                    <li>Используется в T1 линиях в Северной Америке</li>
                  </ul>
                </li>
                <li><strong>HDB3 (High Density Bipolar 3)</strong>:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Модификация AMI, где 4 нуля заменяются специальной последовательностью</li>
                    <li>Используется в E1 линиях в Европе</li>
                  </ul>
                </li>
              </ul>
              
              <ImageCard 
                imageSrc="/placeholder.svg" 
                alt="Сравнение схем кодирования"
                caption="Сравнение различных схем линейного кодирования для одинаковой последовательности бит"
              />
              
              <InfoCard
                title="Критерии выбора схемы кодирования"
                icon={<Binary className="h-5 w-5" />}
                className="mt-6"
              >
                <ul className="list-disc pl-6">
                  <li><strong>Спектральная эффективность</strong> - эффективность использования полосы пропускания</li>
                  <li><strong>Синхронизация</strong> - возможность восстановления тактовых импульсов из сигнала</li>
                  <li><strong>DC-баланс</strong> - отсутствие постоянной составляющей для работы через трансформаторы</li>
                  <li><strong>Обнаружение ошибок</strong> - способность обнаруживать ошибки в принятом сигнале</li>
                  <li><strong>Сложность реализации</strong> - стоимость и энергопотребление оборудования</li>
                  <li><strong>Устойчивость к шуму</strong> - способность правильно декодировать сигнал при наличии помех</li>
                </ul>
              </InfoCard>
            </div>
          </div>
        </TabsContent>
        
        <TabsContent value="block" className="mt-6">
          <div className="grid gap-6 md:grid-cols-2">
            <div>
              <h2>Блочное кодирование</h2>
              <p>
                Блочное кодирование преобразует группы битов данных (блоки) в другие группы битов,
                которые затем передаются по каналу связи. Эти коды используются для улучшения
                характеристик передачи, таких как синхронизация, DC-баланс, обнаружение ошибок и
                эффективность использования полосы пропускания.
              </p>
              
              <h3>4B/5B:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Преобразует 4 бита данных в 5-битовые последовательности</li>
                <li>Каждая 5-битовая последовательность содержит не более 3 нулей подряд</li>
                <li>Обеспечивает достаточное количество переходов для синхронизации</li>
                <li>Используется в FDDI и Fast Ethernet (100BASE-FX)</li>
                <li>Эффективность: 80% (4/5)</li>
              </ul>
              
              <h3>8B/10B:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Преобразует 8 битов данных в 10-битовые символы</li>
                <li>Обеспечивает DC-баланс (примерно равное количество нулей и единиц)</li>
                <li>Обеспечивает достаточное количество переходов для синхронизации</li>
                <li>Позволяет обнаруживать некоторые ошибки</li>
                <li>Используется в технологиях Gigabit Ethernet (1000BASE-X), Fibre Channel, PCI Express, SATA, USB 3.0</li>
                <li>Эффективность: 80% (8/10)</li>
              </ul>
              
              <h3>64B/66B:</h3>
              <ul className="list-disc pl-6">
                <li>Преобразует 64 бита данных в 66-битовые блоки</li>
                <li>Добавляет 2-битовый заголовок (01 для данных, 10 для контроля)</li>
                <li>Выше эффективность по сравнению с 8B/10B: 97% (64/66)</li>
                <li>Используется в 10 Gigabit Ethernet (10GBASE-R)</li>
                <li>Для обеспечения DC-баланса используется скремблирование, а не строгое кодирование</li>
              </ul>
            </div>
            
            <div>
              <h3>128B/130B:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Преобразует 128 битов данных в 130-битовые блоки</li>
                <li>Добавляет 2-битовый синхронизирующий заголовок</li>
                <li>Еще более высокая эффективность: 98.5% (128/130)</li>
                <li>Используется в технологиях Thunderbolt и USB 3.1</li>
              </ul>
              
              <h3>Скремблирование:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Технически не является кодированием, но часто используется вместе с ним</li>
                <li>Процесс "перемешивания" битов по определенному алгоритму для устранения длинных последовательностей одинаковых символов</li>
                <li>Использует полиномиальные делители или функцию XOR с обратной связью</li>
                <li>Помогает в синхронизации и обеспечении DC-баланса</li>
                <li>Примеры: скремблеры в SONET/SDH, xDSL, HFC</li>
              </ul>
              
              <ImageCard 
                imageSrc="/placeholder.svg" 
                alt="Блочное кодирование"
                caption="Пример преобразования данных с использованием кода 8B/10B"
              />
              
              <InfoCard
                title="Применение блочных кодов"
                icon={<Code className="h-5 w-5" />}
                className="mt-6"
              >
                <p>
                  Блочные коды широко применяются в различных технологиях передачи данных:
                </p>
                <ul className="list-disc pl-6">
                  <li><strong>Проводные интерфейсы</strong>: Ethernet, Fibre Channel, SATA, SAS, PCIe, USB</li>
                  <li><strong>Беспроводные технологии</strong>: Wi-Fi, Bluetooth, сотовая связь</li>
                  <li><strong>Оптические системы</strong>: SONET/SDH, PON, оптические транспортные сети</li>
                  <li><strong>Хранение данных</strong>: жесткие диски, оптические диски, флеш-память</li>
                </ul>
                <p className="mt-2">
                  Каждая технология выбирает блочный код, наиболее соответствующий её требованиям
                  к полосе пропускания, помехоустойчивости, сложности реализации и энергопотреблению.
                </p>
              </InfoCard>
            </div>
          </div>
        </TabsContent>
        
        <TabsContent value="error" className="mt-6">
          <div className="grid gap-6 md:grid-cols-2">
            <div>
              <h2>Обнаружение и исправление ошибок</h2>
              <p>
                При передаче данных по физическим каналам связи неизбежно возникают ошибки,
                вызванные различными факторами: шумами, помехами, затуханием сигнала,
                искажениями. Для обеспечения надежной передачи данных на физическом уровне
                используются различные методы обнаружения и исправления ошибок.
              </p>
              
              <h3>Контроль по паритету:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li><strong>Бит паритета</strong> - дополнительный бит, добавляемый к блоку данных</li>
                <li><strong>Четный паритет</strong> - общее число единиц (включая бит паритета) должно быть четным</li>
                <li><strong>Нечетный паритет</strong> - общее число единиц должно быть нечетным</li>
                <li>Простой в реализации, но обнаруживает только нечетное число ошибок</li>
                <li>Используется в некоторых последовательных интерфейсах, оперативной памяти</li>
              </ul>
              
              <h3>Циклический избыточный код (CRC):</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Основан на полиномиальном делении</li>
                <li>К сообщению добавляется контрольная сумма (остаток от деления)</li>
                <li>Эффективно обнаруживает многие типы ошибок: пакетные ошибки, отдельные биты</li>
                <li>Различные варианты: CRC-8, CRC-16, CRC-32, CRC-64</li>
                <li>Широко используется в Ethernet, Wi-Fi, Bluetooth, USB, SATA и многих других протоколах</li>
              </ul>
              
              <h3>Коды Хэмминга:</h3>
              <ul className="list-disc pl-6">
                <li>Способны не только обнаруживать, но и исправлять одиночные ошибки</li>
                <li>Могут обнаруживать (но не исправлять) двойные ошибки</li>
                <li>Добавляют несколько проверочных битов к данным</li>
                <li>Используются в ОЗУ с коррекцией ошибок (ECC RAM), некоторых системах связи</li>
                <li>Пример: код Хэмминга (7,4) - 4 бита данных, 3 проверочных бита</li>
              </ul>
            </div>
            
            <div>
              <h3>Коды Рида-Соломона (Reed-Solomon):</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Мощные блочные коды, способные исправлять множественные ошибки</li>
                <li>Особенно эффективны против пакетных ошибок</li>
                <li>Работают с символами (группами битов), а не с отдельными битами</li>
                <li>Используются в:
                  <ul className="list-disc pl-6 mt-1">
                    <li>Оптических носителях (CD, DVD, Blu-ray)</li>
                    <li>Цифровом телевидении (DVB)</li>
                    <li>Системах хранения данных</li>
                    <li>Высокоскоростных оптических сетях</li>
                    <li>QR-кодах и штрих-кодах</li>
                  </ul>
                </li>
              </ul>
              
              <h3>Сверточные коды:</h3>
              <ul className="list-disc pl-6 mb-4">
                <li>Непрерывно кодируют поток данных, в отличие от блочных кодов</li>
                <li>Используют "память" - текущий выход зависит от предыдущих входов</li>
                <li>Декодируются с помощью алгоритма Витерби или других методов</li>
                <li>Используются в мобильной связи, спутниковых системах, Wi-Fi</li>
                <li>Часто комбинируются с блочными кодами (каскадное кодирование)</li>
              </ul>
              
              <ImageCard 
                imageSrc="/placeholder.svg" 
                alt="Обнаружение и исправление ошибок"
                caption="Схема работы циклического избыточного кода (CRC)"
              />
              
              <InfoCard
                title="FEC (Forward Error Correction)"
                icon={<ShieldAlert className="h-5 w-5" />}
                className="mt-6"
              >
                <p>
                  Упреждающая коррекция ошибок позволяет исправлять ошибки на принимающей стороне без повторной передачи:
                </p>
                <ul className="list-disc pl-6">
                  <li><strong>Увеличивает надежность</strong> передачи в каналах с высоким уровнем помех</li>
                  <li><strong>Снижает необходимость в повторных передачах</strong>, что критично для систем реального времени</li>
                  <li><strong>Современные системы</strong> используют сложные схемы кодирования:
                    <ul className="list-disc pl-6 mt-1">
                      <li>Турбо-коды</li>
                      <li>LDPC (коды с малой плотностью проверок на четность)</li>
                      <li>Полярные коды</li>
                    </ul>
                  </li>
                  <li><strong>Компромисс</strong>: повышенная надежность в обмен на избыточность и сложность обработки</li>
                </ul>
              </InfoCard>
            </div>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default EncodingPage;